[FABRIC:MT] Fabric Engine version 2.6.0 (development)
[FABRIC:MT] Loading Canvas presets from e:\escher\stage\Windows\x86_64\Release\Presets\DFG
[FABRIC:MT] Loading Canvas presets from e:\escher\Test\Canvas\Presets
[FABRIC:MT] Loading Canvas presets from e:\OPI_Tools\fabric\presets
[FABRIC:MT] Loading Canvas presets from C:\Users\helge\Fabric\Presets
[FABRIC:MT] Registered extensions {Adaptors:1.0.0,Alembic:1.1.0,AlembicPatterns:1.0.0,AlembicWrapper:1.8.0,AnimX:1.0.0,AssetPatterns:1.1.0,AttributeHelpers:1.0.2,BinPacking:1.0.0,Bullet:1.0.3,Bullet2:1.0.0,Bullet2Wrapper:1.0.0,BulletHelpers:1.0.0,Characters:1.2.0,Containers:1.2.0,DFGWrapper:1.2.0,FabricInterfaces:1.1.0,FabricSynchronization:1.2.0,Fbx:2.0.0,FbxPatterns:1.0.0,FbxWrapper:2.0.0,FileIO:1.3.1,FreeTypeGL:2.3.1,FTL:1.0.0,Geometry:1.7.0,Images:2.1.0,InlineDrawing:1.6.1,Kludge,LA:1.0.0,LibLas:1.0.0,LidarPatterns:1.0.0,Manipulation:1.2.2,Math:1.5.1,FabricOBJ:1.1.0,ObjPatterns:1.0.0,OGLWrappers:1.2.0,FabricOGL:1.1.0,OpenImageIO:1.1.0,OSOGL:1.1.0,Parameters:1.1.0,RBF:2.6.0,Singletons:1.1.2,SQLite3:1.0.0,SQLite3Wrapper:1.0.0,FabricStatistics:1.1.1,Text:2.4.0,ToolExamples:1.0.0,USD:1.0.0,UsdPatterns:1.0.0,Util:1.4.2,ZeroMQ:1.0.0,ImageProcessing,RTR,RTRAdaptors,Multipede:1.0.0,Particles:1.0.0} in directory: e:\escher\stage\Windows\x86_64\Release\Exts
[FABRIC:MT] Ignored extension directory 'e:\escher\stage\Windows\x86_64\Release\Tests\Core\Exts': unable to open directory 'e:\escher\stage\Windows\x86_64\Release\Tests\Core\Exts': The system cannot find the path specified. (code 3 [0x3])
[FABRIC:MT] Ignored extension directory 'e:\escher\stage\Windows\x86_64\Release\Tests\SceneHub': unable to open directory 'e:\escher\stage\Windows\x86_64\Release\Tests\SceneHub': The system cannot find the path specified. (code 3 [0x3])
[FABRIC:MT] Ignored extension directory 'e:\Exts\Kraken\Exts': unable to open directory 'e:\Exts\Kraken\Exts': The system cannot find the path specified. (code 3 [0x3])
[FABRIC:MT] Registered extension {TS_Hair} in directory: e:\OPI_Tools\fabric\exts
[FABRIC:MT] IRCache: Not pruning since last prune was less than 24 hours ago
[FABRIC:MT] Loaded extension Math in 277.340ms (cached)
[FABRIC:MT] Loaded extension FabricSynchronization in 59.202ms (cached)
[FABRIC:MT] Loaded extension FabricStatistics in 49.674ms (cached)
[FABRIC:MT] Loaded extension Singletons in 9.244ms (cached)
[FABRIC:MT] Loaded extension Util in 33.368ms (cached)
[FABRIC:MT] Loaded extension Containers in 1078.954ms (cached)
[FABRIC:MT] Loaded extension BinPacking in 13.936ms (cached)
[FABRIC:MT] Loaded extension Geometry in 864.201ms (cached)
[FABRIC:MT] Loaded extension FabricOGL in 132.573ms (cached)
[FABRIC:MT] Loaded extension Parameters in 92.078ms (cached)
[FABRIC:MT] Loaded extension FabricInterfaces in 142.130ms (cached)
[FABRIC:MT] Loaded extension FreeTypeGL in 17.423ms (cached)
[FABRIC:MT] Loaded extension FileIO in 72.236ms (cached)
[FABRIC:MT] Loaded extension Text in 38.751ms (cached)
[FABRIC:MT] Loaded extension OpenImageIO in 24.072ms (cached)
[FABRIC:MT] Loaded extension Images in 15.896ms (cached)
[FABRIC:MT] Loaded extension InlineDrawing in 769.570ms (cached)
[FABRIC:MT] Loaded extension Kludge in 1287.578ms (cached)
[FABRIC:MT] Loaded extension FTL in 129.388ms (cached)
[FABRIC:MT] Loaded extension AnimX in 110.927ms (cached)
[FABRIC:MT] [TS_Hair] HairSystem.kl:148:10: warning: variable 'profile' shadows a parameter of the same name
[FABRIC:MT] Loaded extension TS_Hair in 593.571ms (first time)
registerFunction: thisType='' func='function drawHairSystem( io DrawingHandle handle, in HairSystem hair )'
  Added to bin[normal][drawHairSystem]
registerFunction: thisType='HairGuide' func='function HairGuide?( in Curve curve, in Vec3 normal, in Color color, in Integer layer )'
  Added to bin[normal][HairGuideFromCurve]
registerFunction: thisType='HairGuide' func='function HairGuide?( in Vec3 a, in Vec3 b, in Vec3 c, in Vec3 d, in Vec3 e, in Vec3 normal, in Color color, in Integer layer )'
  Added to bin[normal][HairGuide]
registerFunction: thisType='HairGuide' func='function HairGuide?( in Vec3 points[], in Vec3 normal, in Color color, in Integer layer )'
  Added to bin[normal][HairGuideFromArray]
registerFunction: thisType='HairGuide' func='function Boolean HairGuide.isValid?()'
  Added to bin[normal][Boolean HairGuide.isValid]
registerFunction: thisType='HairGuide' func='function HairGuide.setPoints!( in Vec3 points[] )'
  Added to bin[normal][HairGuide.setPoints]
registerFunction: thisType='HairSystem' func='function HairSystem?()'
  Added to bin[normal][HairSystem]
registerFunction: thisType='HairSystem' func='function Index HairSystem.addGuide!( in HairGuide guide )'
  Added to bin[normal][Index HairSystem.addGuide]
registerFunction: thisType='HairSystem' func='function Index[] HairSystem.addGuidesFromCurves!( in Curves curves, in Color color, in Index layer )'
  Added to bin[normal][Index[] HairSystem.addGuidesFromCurves]
registerFunction: thisType='HairSystem' func='function Curves HairSystem.generateCurves!()'
  Added to bin[normal][Curves HairSystem.generateCurves]
registerFunction: thisType='HairSystem' func='function PolygonMesh HairSystem.generateMesh!( in Index curveIndex, in Curves inputCurves, in Scalar radius, in AnimX::AnimCurve profile, in Scalar segmentLength, in Integer cylinderSides, in Vec3 upvector )'
  Added to bin[normal][PolygonMesh HairSystem.generateMesh]
registerFunction: thisType='HairSystem' func='function HairSystem.setGuideColorsFromMesh!( in PolygonMesh mesh )'
  Added to bin[normal][HairSystem.setGuideColorsFromMesh]
registerFunction: thisType='TS::HairGuide' func='function HairGuide?( in Vec3 a, in Vec3 b, in Vec3 c, in Vec3 d, in Vec3 e, in Vec3 normal, in Color color, in Integer layer )'
  Added to bin[normal][HairGuide]
registerFunction: thisType='TS::HairGuide' func='function HairGuide?( in Vec3 points[], in Vec3 normal, in Color color, in Integer layer )'
  Added to bin[normal][HairGuideFromArray]
registerFunction: thisType='TS::HairGuide' func='function HairGuide?( in Curve curve, in Vec3 normal, in Color color, in Integer layer )'
  Added to bin[normal][HairGuideFromCurve]
registerFunction: thisType='TS::HairGuide' func='function Boolean HairGuide.isValid?()'
  Added to bin[normal][Boolean TS::HairGuide.isValid]
registerFunction: thisType='TS::HairGuide' func='function HairGuide.setPoints!( in Vec3 points[] )'
  Added to bin[normal][TS::HairGuide.setPoints]
registerFunction: thisType='TS::HairSystem' func='function HairSystem?()'
  Added to bin[normal][HairSystem]
registerFunction: thisType='TS::HairSystem' func='function Index HairSystem.addGuide!( in HairGuide guide )'
  Added to bin[normal][Index TS::HairSystem.addGuide]
registerFunction: thisType='TS::HairSystem' func='function Index[] HairSystem.addGuidesFromCurves!( in Curves curves, in Color color, in Index layer )'
  Added to bin[normal][Index[] TS::HairSystem.addGuidesFromCurves]
registerFunction: thisType='TS::HairSystem' func='function HairSystem.setGuideColorsFromMesh!( in PolygonMesh mesh )'
  Added to bin[normal][TS::HairSystem.setGuideColorsFromMesh]
registerFunction: thisType='TS::HairSystem' func='function Curves HairSystem.generateCurves!()'
  Added to bin[normal][Curves TS::HairSystem.generateCurves]
registerFunction: thisType='TS::HairSystem' func='function PolygonMesh HairSystem.generateMesh!( in Index curveIndex, in Curves inputCurves, in Scalar radius, in AnimX::AnimCurve profile, in Scalar segmentLength, in Integer cylinderSides, in Vec3 upvector )'
  Added to bin[normal][PolygonMesh TS::HairSystem.generateMesh]
processFunctions
  bin[normal][drawHairSystem][2] (asArray=false)
    thisType='' code='function drawHairSystem( io DrawingHandle handle, in HairSystem hair )'
  bin[normal][HairGuideFromCurve][4] (asArray=false)
    thisType='HairGuide' code='function HairGuide?( in Curve curve, in Vec3 normal, in Color color, in Integer layer )'
    thisType='TS::HairGuide' code='function HairGuide?( in Curve curve, in Vec3 normal, in Color color, in Integer layer )'
      Skipping func: already have a func and not polyThis and not polyParams
  bin[normal][HairGuide][8] (asArray=false)
    thisType='HairGuide' code='function HairGuide?( in Vec3 a, in Vec3 b, in Vec3 c, in Vec3 d, in Vec3 e, in Vec3 normal, in Color color, in Integer layer )'
    thisType='TS::HairGuide' code='function HairGuide?( in Vec3 a, in Vec3 b, in Vec3 c, in Vec3 d, in Vec3 e, in Vec3 normal, in Color color, in Integer layer )'
      Skipping func: already have a func and not polyThis and not polyParams
  bin[normal][HairGuideFromArray][4] (asArray=false)
    thisType='HairGuide' code='function HairGuide?( in Vec3 points[], in Vec3 normal, in Color color, in Integer layer )'
    thisType='TS::HairGuide' code='function HairGuide?( in Vec3 points[], in Vec3 normal, in Color color, in Integer layer )'
      Skipping func: already have a func and not polyThis and not polyParams
  bin[normal][Boolean HairGuide.isValid][0] (asArray=false)
    thisType='HairGuide' code='function Boolean HairGuide.isValid?()'
  bin[normal][HairGuide.setPoints][1] (asArray=false)
    thisType='HairGuide' code='function HairGuide.setPoints!( in Vec3 points[] )'
  bin[normal][HairSystem][0] (asArray=false)
    thisType='HairSystem' code='function HairSystem?()'
    thisType='TS::HairSystem' code='function HairSystem?()'
      Skipping func: already have a func and not polyThis and not polyParams
  bin[normal][Index HairSystem.addGuide][1] (asArray=false)
    thisType='HairSystem' code='function Index HairSystem.addGuide!( in HairGuide guide )'
  bin[normal][Index[] HairSystem.addGuidesFromCurves][3] (asArray=false)
    thisType='HairSystem' code='function Index[] HairSystem.addGuidesFromCurves!( in Curves curves, in Color color, in Index layer )'
  bin[normal][Curves HairSystem.generateCurves][0] (asArray=false)
    thisType='HairSystem' code='function Curves HairSystem.generateCurves!()'
  bin[normal][PolygonMesh HairSystem.generateMesh][7] (asArray=false)
    thisType='HairSystem' code='function PolygonMesh HairSystem.generateMesh!( in Index curveIndex, in Curves inputCurves, in Scalar radius, in AnimX::AnimCurve profile, in Scalar segmentLength, in Integer cylinderSides, in Vec3 upvector )'
  bin[normal][HairSystem.setGuideColorsFromMesh][1] (asArray=false)
    thisType='HairSystem' code='function HairSystem.setGuideColorsFromMesh!( in PolygonMesh mesh )'
  bin[normal][Boolean TS::HairGuide.isValid][0] (asArray=false)
    thisType='TS::HairGuide' code='function Boolean HairGuide.isValid?()'
Skipped 'fabric/presets/TomSporer/TS_Hair/\HairGuide\IsValid.canvas', 'function Boolean HairGuide.isValid?()', file already exists, created by 'function Boolean HairGuide.isValid?()'.
    Skipping bin: no output files were written
  bin[normal][TS::HairGuide.setPoints][1] (asArray=false)
    thisType='TS::HairGuide' code='function HairGuide.setPoints!( in Vec3 points[] )'
Skipped 'fabric/presets/TomSporer/TS_Hair/\HairGuide\SetPoints.canvas', 'function HairGuide.setPoints!( in Vec3 points[] )', file already exists, created by 'function HairGuide.setPoints!( in Vec3 points[] )'.
    Skipping bin: no output files were written
  bin[normal][Index TS::HairSystem.addGuide][1] (asArray=false)
    thisType='TS::HairSystem' code='function Index HairSystem.addGuide!( in HairGuide guide )'
Skipped 'fabric/presets/TomSporer/TS_Hair/\HairSystem\AddGuide.canvas', 'function Index HairSystem.addGuide!( in HairGuide guide )', file already exists, created by 'function Index HairSystem.addGuide!( in HairGuide guide )'.
    Skipping bin: no output files were written
  bin[normal][Index[] TS::HairSystem.addGuidesFromCurves][3] (asArray=false)
    thisType='TS::HairSystem' code='function Index[] HairSystem.addGuidesFromCurves!( in Curves curves, in Color color, in Index layer )'
Skipped 'fabric/presets/TomSporer/TS_Hair/\HairSystem\AddGuidesFromCurves.canvas', 'function Index[] HairSystem.addGuidesFromCurves!( in Curves curves, in Color color, in Index layer )', file already exists, created by 'function Index[] HairSystem.addGuidesFromCurves!( in Curves curves, in Color color, in Index layer )'.
    Skipping bin: no output files were written
  bin[normal][TS::HairSystem.setGuideColorsFromMesh][1] (asArray=false)
    thisType='TS::HairSystem' code='function HairSystem.setGuideColorsFromMesh!( in PolygonMesh mesh )'
Skipped 'fabric/presets/TomSporer/TS_Hair/\HairSystem\SetGuideColorsFromMesh.canvas', 'function HairSystem.setGuideColorsFromMesh!( in PolygonMesh mesh )', file already exists, created by 'function HairSystem.setGuideColorsFromMesh!( in PolygonMesh mesh )'.
    Skipping bin: no output files were written
  bin[normal][Curves TS::HairSystem.generateCurves][0] (asArray=false)
    thisType='TS::HairSystem' code='function Curves HairSystem.generateCurves!()'
Skipped 'fabric/presets/TomSporer/TS_Hair/\HairSystem\GenerateCurves.canvas', 'function Curves HairSystem.generateCurves!()', file already exists, created by 'function Curves HairSystem.generateCurves!()'.
    Skipping bin: no output files were written
  bin[normal][PolygonMesh TS::HairSystem.generateMesh][7] (asArray=false)
    thisType='TS::HairSystem' code='function PolygonMesh HairSystem.generateMesh!( in Index curveIndex, in Curves inputCurves, in Scalar radius, in AnimX::AnimCurve profile, in Scalar segmentLength, in Integer cylinderSides, in Vec3 upvector )'
Skipped 'fabric/presets/TomSporer/TS_Hair/\HairSystem\GenerateMesh.canvas', 'function PolygonMesh HairSystem.generateMesh!( in Index curveIndex, in Curves inputCurves, in Scalar radius, in AnimX::AnimCurve profile, in Scalar segmentLength, in Integer cylinderSides, in Vec3 upvector )', file already exists, created by 'function PolygonMesh HairSystem.generateMesh!( in Index curveIndex, in Curves inputCurves, in Scalar radius, in AnimX::AnimCurve profile, in Scalar segmentLength, in Integer cylinderSides, in Vec3 upvector )'.
    Skipping bin: no output files were written
