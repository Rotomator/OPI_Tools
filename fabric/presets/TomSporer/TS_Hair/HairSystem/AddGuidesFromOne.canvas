{
  "objectType" : "Func",
  "metadata" : {
    "uiTextColor" : "{\n  \"r\" : 20,\n  \"g\" : 20,\n  \"b\" : 20\n  }",
    "uiNodeColor" : "{\n  \"r\" : 121,\n  \"g\" : 134,\n  \"b\" : 143\n  }"
    },
  "title" : "AddGuidesFromOne",
  "ports" : [
    {
      "objectType" : "ExecPort",
      "name" : "exec",
      "nodePortType" : "IO",
      "defaultValues" : {
        "Execute" : {}
        },
      "execPortType" : "IO",
      "typeSpec" : "Execute"
      },
    {
      "objectType" : "ExecPort",
      "name" : "hair",
      "nodePortType" : "IO",
      "defaultValues" : {
        "TS::HairSystem" : null
        },
      "execPortType" : "IO",
      "typeSpec" : "TS::HairSystem"
      },
    {
      "objectType" : "ExecPort",
      "name" : "guide",
      "nodePortType" : "Out",
      "defaultValues" : {
        "TS::HairGuide" : {
          "points" : [],
          "normal" : {
            "x" : 0,
            "y" : 0,
            "z" : 0
            },
          "color" : {
            "r" : 0,
            "g" : 0,
            "b" : 0,
            "a" : 1
            },
          "layer" : 0
          }
        },
      "execPortType" : "In",
      "typeSpec" : "TS::HairGuide"
      },
    {
      "objectType" : "ExecPort",
      "name" : "count",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Size" : 12
        },
      "execPortType" : "In",
      "typeSpec" : "Size"
      }
    ],
  "blocks" : [
    {
      "objectType" : "ExecBlock",
      "metadata" : {
        "uiGraphPos" : "{\"x\":0.0,\"y\":0.0}"
        },
      "name" : "addGuide",
      "ports" : [
        {
          "objectType" : "ExecBlockPort",
          "name" : "base",
          "nodePortType" : "In",
          "outsidePortType" : "In",
          "typeSpec" : "TS::HairGuide"
          },
        {
          "objectType" : "ExecBlockPort",
          "name" : "index",
          "nodePortType" : "In",
          "outsidePortType" : "In",
          "typeSpec" : "SInt32"
          },
        {
          "objectType" : "ExecBlockPort",
          "name" : "count",
          "nodePortType" : "In",
          "outsidePortType" : "In",
          "typeSpec" : "SInt32"
          },
        {
          "objectType" : "ExecBlockPort",
          "name" : "ratio",
          "nodePortType" : "In",
          "outsidePortType" : "In",
          "typeSpec" : "Float32"
          },
        {
          "objectType" : "ExecBlockPort",
          "name" : "result",
          "nodePortType" : "Out",
          "outsidePortType" : "Out",
          "typeSpec" : "TS::HairGuide"
          }
        ],
      "defaultExec" : {
        "objectType" : "Graph",
        "title" : "",
        "ports" : [],
        "fixedPorts" : [
          {
            "objectType" : "ExecFixedPort",
            "name" : "base",
            "nodePortType" : "Out",
            "outsidePortType" : "In"
            },
          {
            "objectType" : "ExecFixedPort",
            "name" : "index",
            "nodePortType" : "Out",
            "outsidePortType" : "In"
            },
          {
            "objectType" : "ExecFixedPort",
            "name" : "count",
            "nodePortType" : "Out",
            "outsidePortType" : "In"
            },
          {
            "objectType" : "ExecFixedPort",
            "name" : "ratio",
            "nodePortType" : "Out",
            "outsidePortType" : "In"
            },
          {
            "objectType" : "ExecFixedPort",
            "name" : "result",
            "nodePortType" : "In",
            "outsidePortType" : "Out"
            }
          ],
        "extDeps" : {},
        "nodes" : [],
        "connections" : {
          "base" : [
            "result"
            ]
          }
        }
      }
    ],
  "extDeps" : {
    "TS_Hair" : "*"
    },
  "presetGUID" : "C07F15BB44B4FB48A9D9394D74F6BBD0",
  "code" : "require TS_Hair;

dfgEntry {
  hair.addGuide(guide);

  for(Size i=0;i<count;i++)
  {
    Index idx = hair.guides.size();
    hair.addGuide(guide);
    Float32 ratio = 1.0;
    if(count > 1)
      ratio = Float32(idx) / Float32(count-1);
    hair.guides[idx] = dfgPullBlockPort('addGuide.result', guide, idx, count, ratio);
  }
}
"
  }