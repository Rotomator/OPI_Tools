{
  "objectType" : "Func",
  "metadata" : {
    "uiTextColor" : "{\n  \"r\" : 20,\n  \"g\" : 20,\n  \"b\" : 20\n  }",
    "uiNodeColor" : "{\n  \"r\" : 121,\n  \"g\" : 134,\n  \"b\" : 143\n  }"
    },
  "title" : "deformHairCurves",
  "ports" : [
    {
      "objectType" : "ExecPort",
      "name" : "exec",
      "nodePortType" : "IO",
      "defaultValues" : {
        "Execute" : {}
        },
      "execPortType" : "IO",
      "typeSpec" : "Execute"
      },
    {
      "objectType" : "ExecPort",
      "name" : "curves",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Curves" : null
        },
      "execPortType" : "In",
      "typeSpec" : "Curves"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {
        "uiCombo" : "(\"PointWise\", \"SegmentWise\")"
        },
      "name" : "mode",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Integer" : 0
        },
      "execPortType" : "In",
      "typeSpec" : "Integer"
      },
    {
      "objectType" : "ExecPort",
      "name" : "result",
      "nodePortType" : "In",
      "defaultValues" : {
        "Curves" : null
        },
      "execPortType" : "Out",
      "typeSpec" : "Curves"
      }
    ],
  "blocks" : [
    {
      "objectType" : "ExecBlock",
      "metadata" : {
        "uiGraphPos" : "{\"x\":0.0,\"y\":0.0}"
        },
      "name" : "deform",
      "ports" : [
        {
          "objectType" : "ExecBlockPort",
          "name" : "posOrSegment",
          "nodePortType" : "In",
          "outsidePortType" : "In",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "ExecBlockPort",
          "name" : "pos",
          "nodePortType" : "In",
          "outsidePortType" : "In",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "ExecBlockPort",
          "name" : "tangent",
          "nodePortType" : "In",
          "outsidePortType" : "In",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "ExecBlockPort",
          "name" : "ratio",
          "nodePortType" : "In",
          "outsidePortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "ExecBlockPort",
          "name" : "vertexIdx",
          "nodePortType" : "In",
          "outsidePortType" : "In",
          "typeSpec" : "Integer"
          },
        {
          "objectType" : "ExecBlockPort",
          "name" : "vertexCount",
          "nodePortType" : "In",
          "outsidePortType" : "In",
          "typeSpec" : "Integer"
          },
        {
          "objectType" : "ExecBlockPort",
          "name" : "curveIdx",
          "nodePortType" : "In",
          "outsidePortType" : "In",
          "typeSpec" : "Integer"
          },
        {
          "objectType" : "ExecBlockPort",
          "name" : "curveCount",
          "nodePortType" : "In",
          "outsidePortType" : "In",
          "typeSpec" : "Integer"
          },
        {
          "objectType" : "ExecBlockPort",
          "name" : "result",
          "nodePortType" : "Out",
          "outsidePortType" : "Out",
          "typeSpec" : "Vec3"
          }
        ],
      "defaultExec" : {
        "objectType" : "Graph",
        "metadata" : {
          "uiGraphPan" : "{\n  \"x\" : 502.0,\n  \"y\" : -147.0\n  }"
          },
        "title" : "",
        "ports" : [],
        "fixedPorts" : [
          {
            "objectType" : "ExecFixedPort",
            "name" : "posOrSegment",
            "nodePortType" : "Out",
            "outsidePortType" : "In"
            },
          {
            "objectType" : "ExecFixedPort",
            "name" : "pos",
            "nodePortType" : "Out",
            "outsidePortType" : "In"
            },
          {
            "objectType" : "ExecFixedPort",
            "name" : "tangent",
            "nodePortType" : "Out",
            "outsidePortType" : "In"
            },
          {
            "objectType" : "ExecFixedPort",
            "name" : "ratio",
            "nodePortType" : "Out",
            "outsidePortType" : "In"
            },
          {
            "objectType" : "ExecFixedPort",
            "name" : "vertexIdx",
            "nodePortType" : "Out",
            "outsidePortType" : "In"
            },
          {
            "objectType" : "ExecFixedPort",
            "name" : "vertexCount",
            "nodePortType" : "Out",
            "outsidePortType" : "In"
            },
          {
            "objectType" : "ExecFixedPort",
            "name" : "curveIdx",
            "nodePortType" : "Out",
            "outsidePortType" : "In"
            },
          {
            "objectType" : "ExecFixedPort",
            "name" : "curveCount",
            "nodePortType" : "Out",
            "outsidePortType" : "In"
            },
          {
            "objectType" : "ExecFixedPort",
            "name" : "result",
            "nodePortType" : "In",
            "outsidePortType" : "Out"
            }
          ],
        "extDeps" : {},
        "nodes" : [],
        "connections" : {
          "posOrSegment" : [
            "result"
            ]
          }
        }
      }
    ],
  "extDeps" : {
    "Geometry" : "*"
    },
  "presetGUID" : "B7FBBF926EC2B32A5A085AE4F76ECE85",
  "code" : "dfgEntry {
  result = curves.clone();
  
  for(Size i=0;i<curves.curveCount();i++)
  {
    Curve curve = curves.getCurve(i);
    Curve resultCurve = result.getCurve(i);
    
    if(mode == 0) // per vertex
    {
      for(Size j=0;j<curve.pointCount();j++)
      {
        resultCurve.setPointPosition(j, dfgPullBlockPort('deform.result',
          curve.getPointPosition(j),
          curve.getPointPosition(j),
          curve.getTangentAtParam(Float32(j)),
          Float32(j) / Float32(curve.pointCount() -1),
          j,
          curve.pointCount(),
          i,
          curves.curveCount()));
      }
    }
    else
    {
      Vec3 segments[](curve.pointCount()-1);
      for(Size j=1;j<curve.pointCount();j++)
      {
        segments[j-1] = curve.getPointPosition(j) - curve.getPointPosition(j-1);
      }
    
      for(Size j=0;j<segments.size();j++)
      {
        segments[j] = dfgPullBlockPort('deform.result',
          segments[j],
          curve.getPointPosition(j+1),
          curve.getTangentAtParam(Float32(j+1)),
          Float32(j+1) / Float32(curve.pointCount() -1),
          j+1,
          curve.pointCount(),
          i,
          curves.curveCount());
      }

      for(Size j=1;j<resultCurve.pointCount();j++)
      {
        resultCurve.setPointPosition(j, resultCurve.getPointPosition(j-1) + segments[j-1]);
      }
    }
  }
}
"
  }