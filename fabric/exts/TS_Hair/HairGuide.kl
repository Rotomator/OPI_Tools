require Math;
require Geometry;

namespace TS
{
  struct HairGuide
  {
    Vec3 points[];
    Vec3 normal;
    Color color;
  };

  /// \dfgPresetDefault a {"x": 0.0, "y": 0.0, "z": 0.0}
  /// \dfgPresetDefault b {"x": 0.0, "y": 1.0, "z": 0.0}
  /// \dfgPresetDefault c {"x": 0.0, "y": 2.0, "z": 0.0}
  /// \dfgPresetDefault d {"x": 0.0, "y": 3.0, "z": 0.0}
  /// \dfgPresetDefault e {"x": 0.0, "y": 4.0, "z": 0.0}
  /// \dfgPresetDefault normal {"x": 0.0, "y": 1.0, "z": 0.0}
  /// \dfgPresetDefault color {"r": 1.0, "g": 1.0, "b": 0.0, "a": 1.0}
  HairGuide(Vec3 a, Vec3 b, Vec3 c, Vec3 d, Vec3 e, Vec3 normal, Color color)
  {
    this.points.resize(5);
    this.points[0] = a;
    this.points[1] = b;
    this.points[2] = c;
    this.points[3] = d;
    this.points[4] = e;
    this.normal = normal;
    this.color = color;
  }

  /// \dfgPresetTitle HairGuideFromCurve
  /// \dfgPresetDefault normal {"x": 0.0, "y": 1.0, "z": 0.0}
  /// \dfgPresetDefault color {"r": 1.0, "g": 1.0, "b": 0.0, "a": 1.0}
  HairGuide(Curve curve, Vec3 normal, Color color)
  {
    if(curve.pointCount() != 5)
      throw("HairGuide can only be created from curves with 5 points");
    this.points.resize(5);
    for(Size i=0;i<5;i++)
      this.points[i] = curve.getPointPosition(i);
    this.normal = normal;
    this.color = color;
  }
}
